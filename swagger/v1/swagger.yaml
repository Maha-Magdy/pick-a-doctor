---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/auth":
    post:
      summary: User sign-up
      parameters: []
      responses:
        '200':
          description: success
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                password_confirmation:
                  type: string
                date_of_birth:
                  type: string
                  format: date
              required:
              - id
              - first_name
              - last_name
              - email
              - password
              - password_confirmation
              - date_of_birth
  "/api/auth/sign_in":
    post:
      summary: User sign-in
      parameters: []
      responses:
        '200':
          description: success
        '401':
          description: fail
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
              - email
              - password
  "/api/appointments":
    get:
      summary: Retrieves all appointments
      tags:
      - Appointments
      responses:
        '200':
          description: All appointments retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    user_id:
                      type: integer
                    doctor_id:
                      type: integer
                    date:
                      type: string
                    notes:
                      type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
                  required:
                  - id
                  - user_id
                  - doctor_id
                  - date
                  - notes
                  - created_at
                  - updated_at
    post:
      summary: Creates an appointment
      tags:
      - Appointments
      parameters:
      - name: user_id
        in: query
        schema:
          type: integer
      - name: doctor_id
        in: query
        schema:
          type: integer
      - name: date
        in: query
        schema:
          type: string
      - name: notes
        in: query
        schema:
          type: string
      responses:
        '200':
          description: Appointment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  doctor_id:
                    type: integer
                  date:
                    type: string
                  notes:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                required:
                - id
                - user_id
                - doctor_id
                - date
                - notes
                - created_at
                - updated_at
        '422':
          description: invalid request
  "/api/user_appointments":
    get:
      summary: Retrieves all the appointments for a specific user
      tags:
      - Appointments
      parameters:
      - name: id
        in: query
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    user_id:
                      type: integer
                    doctor_id:
                      type: integer
                    date:
                      type: string
                    notes:
                      type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
                  required:
                  - id
                  - user_id
                  - doctor_id
                  - date
                  - notes
                  - created_at
                  - updated_at
        '422':
          description: invalid request
  "/api/doctor_appointments":
    get:
      summary: Retrieves all the appointments for a specific doctor
      tags:
      - Appointments
      parameters:
      - name: id
        in: query
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    user_id:
                      type: integer
                    doctor_id:
                      type: integer
                    date:
                      type: string
                    notes:
                      type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
                  required:
                  - id
                  - user_id
                  - doctor_id
                  - date
                  - notes
                  - created_at
                  - updated_at
        '422':
          description: invalid request
  "/api/appointments/{id}":
    get:
      summary: Retrieves a specific appointment
      tags:
      - Appointments
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  doctor_id:
                    type: integer
                  date:
                    type: string
                  notes:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                required:
                - id
                - user_id
                - doctor_id
                - date
                - notes
                - created_at
                - updated_at
        '422':
          description: invalid request
    put:
      summary: Edits a specific appointment
      tags:
      - Appointments
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: date
        in: query
        schema:
          type: string
      - name: notes
        in: query
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  doctor_id:
                    type: integer
                  date:
                    type: string
                  notes:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                required:
                - id
                - user_id
                - doctor_id
                - date
                - notes
                - created_at
                - updated_at
        '422':
          description: invalid request
    delete:
      summary: Destroys an appointment
      tags:
      - Appointments
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: The appointment has been deleted.
        '422':
          description: invalid request
  "/api/specializations":
    get:
      summary: Retrieves all specializations
      tags:
      - Specializations
      responses:
        '200':
          description: All specializations retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
                  required:
                  - id
                  - name
                  - created_at
                  - updated_at
    post:
      summary: Creates a specialization
      tags:
      - Specializations
      parameters:
      - name: name
        in: query
        schema:
          type: string
      responses:
        '200':
          description: specialization created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                required:
                - id
                - name
                - created_at
                - updated_at
        '422':
          description: invalid request
  "/api/specializations/{id}":
    get:
      summary: Retrieves a specific specialization
      tags:
      - Specializations
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: specialization edited
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                required:
                - id
                - name
                - created_at
                - updated_at
        '422':
          description: invalid request
    put:
      summary: Edits a specific specialization
      tags:
      - Specializations
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: name
        in: query
        schema:
          type: string
      responses:
        '200':
          description: specialization edited
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                required:
                - id
                - name
                - created_at
                - updated_at
        '422':
          description: invalid request
    delete:
      summary: Destroys a specialization
      tags:
      - Specializations
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: The specialization has been deleted.
        '422':
          description: invalid request
        '404':
          description: Couldn't find Specialization with 'id'=-
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
